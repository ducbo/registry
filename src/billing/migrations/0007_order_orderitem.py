# Generated by Django 2.1.5 on 2019-01-26 23:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager

import zen.zdomains


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('billing', '0006_auto_20190120_2303'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField()),
                ('finished_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('status', models.CharField(choices=[('started', 'Started'), ('cancelled', 'Cancelled'), ('failed', 'Failed'), ('processed', 'Processed')], default='started', max_length=16)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'base_manager_name': 'orders',
                'default_manager_name': 'orders',
            },
            managers=[
                ('orders', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('type', models.CharField(choices=[('domain_register', 'Domain Register'), ('domain_renew', 'Domain Renew'), ('domain_restore', 'Domain Restore')], max_length=32)),
                ('name', models.CharField(max_length=255, unique=True, validators=[zen.zdomains.validate_domain_name])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='billing.Order')),
            ],
            options={
                'base_manager_name': 'order_items',
                'default_manager_name': 'order_items',
            },
            managers=[
                ('order_items', django.db.models.manager.Manager()),
            ],
        ),
    ]
